## DataSource##

##===PostgresSQL Configuration===##

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/springboot-kafka
spring.datasource.username=postgres
spring.datasource.password=postgres

##===MongoDB Configuration===###

#spring.data.mongodb.host=tony
spring.data.mongodb.port=27017
spring.data.mongodb.database=springboot
spring.data.mongodb.uri=mongodb://localhost/springboot

## ORM Properties ##

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create

##Kafka configuration##

##===Kafka Producer Configurations===##

spring.kafka.producer.acks=all
spring.kafka.producer.bootstrap-servers=tony:9092,tony:9091,tony:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.client-id=kafkaproducer

##===kafka Consumer Configurations===##

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=tony:9093,tony:9092,tony:9091
spring.kafka.consumer.group-id=group1
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer



